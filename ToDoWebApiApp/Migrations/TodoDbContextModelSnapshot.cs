// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using ToDoWebApiApp.Models;

namespace ToDoWebApiApp.Migrations
{
    [DbContext(typeof(TodoDbContext))]
    partial class TodoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ToDoWebApiApp.Models.TodoItem", b =>
                {
                    b.Property<int>("TotoItemId")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsComplete");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int?>("TodoTaskId")
                        .IsRequired();

                    b.HasKey("TotoItemId");

                    b.HasIndex("TodoTaskId");

                    b.ToTable("TodoItems");
                });

            modelBuilder.Entity("ToDoWebApiApp.Models.TodoTask", b =>
                {
                    b.Property<int>("TodoTaskId")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsComplete");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("TodoTaskId");

                    b.ToTable("TodoTasks");
                });

            modelBuilder.Entity("ToDoWebApiApp.Models.TodoItem", b =>
                {
                    b.HasOne("ToDoWebApiApp.Models.TodoTask", "TodoTask")
                        .WithMany("Items")
                        .HasForeignKey("TodoTaskId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
